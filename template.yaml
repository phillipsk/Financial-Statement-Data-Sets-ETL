AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Unzips uploaded zip files in the S3 bucket

Parameters:
  DestinationBucket:
    Type: String
    Description: Bucket to which contents of uncompressed files will be written to (leave empty to uncompress to the same bucket where file was uploaded)
    Default: ""
  LambdaFunctionMemorySize:
    Type: Number
    Description: Amount of memory dedicated for Lambda function (the more, the bigger archive it will be able to uncompress)
    Default: 128
  LambdaFunctionTimeout:
    Type: Number
    Description: Maximum time for how long Lambda can be runing
    Default: 60

Resources:
  UncompressFunction:
    Type: AWS::Serverless::Function
    Properties:
      Description: Uncompresses files uploaded to the S3 bucket
      Handler: s3_uncompressor.lambda_handler.main
      Runtime: python3.6
      CodeUri: ./s3-uncompressor-lambda-package.zip
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref DestinationBucket
        - S3CrudPolicy:
            BucketName:
              # this has to be name, not Ref, otherwise it complains about circular dependency
              Fn::Sub: ${AWS::AccountId}-${AWS::Region}-uncompressor-source
      Timeout: !Ref LambdaFunctionTimeout
      MemorySize: !Ref LambdaFunctionMemorySize
      Events:
        upload:
          Type: S3
          Properties:
            Bucket:
              Ref: UncompressorSourceBucket
            Events: s3:ObjectCreated:*
      Environment:
        Variables:
          DESTINATION_BUCKET:
            Ref: DestinationBucket
      DeadLetterQueue:
        Type: SQS
        TargetArn:
          Fn::GetAtt: [UncompressFunctionDLQ, Arn]

  UncompressFunctionDLQ:
    Type: AWS::SQS::Queue

  UncompressorSourceBucket:
    Type: AWS::S3::Bucket
    Metadata:
      Description: Uploading compressed file to this bucket will trigger the Lambda (and uncompress the contents)
    Properties:
      BucketName:
        Fn::Sub: ${AWS::AccountId}-${AWS::Region}-uncompressor-source